{"ast":null,"code":"import * as usersAPI from \"./users-api\";\nexport async function signUp(userData) {\n  const token = await usersAPI.signUp(userData);\n\n  // return token\n  //instead of returning the token\n  localStorage.setItem(\"token\", token);\n  return getUser();\n}\nexport function getToken() {\n  //get token from localStorage\n  const token = localStorage.getItem(\"token\");\n  if (!token) return null;\n  //get token's payload, use string.split\n\n  const payload = token.split(\".\")[1];\n  //JWT's are base64 encoded\n  //need to decode it to make it useable \n  //gives us a json user object\n  const decodedPayload = atob(payload);\n  const parsedPayload = JSON.parse(decodedPayload);\n  //JWT exp is expressed in seconds, not milliseconds, need to convert ( / 1000 below )\n\n  //check if expired\n  if (parsedPayload.exp < Date.now(0) / 1000) {\n    //the token has expired, remove it\n    localStorage.removeItem(\"token\");\n    return null;\n  } else {\n    return token;\n  }\n}\nexport function getUser() {\n  const token = getToken();\n  if (token) {\n    const payload = token.split(\".\")[1];\n    const decodedPayload = atob(payload);\n    const parsedPayload = JSON.parse(decodedPayload);\n    return parsedPayload.user;\n  } else {\n    return null;\n  }\n}\nexport function logOut() {\n  localStorage.removeItem(\"token\");\n}\nexport async function login(credentials) {\n  //call login from users-api\n  //should be creating a token by loggin in \n  const token = await usersAPI.login(credentials);\n\n  //console.log(\"Token: \" + token)\n\n  //save the token, return the user\n  localStorage.setItem(\"token\", token);\n  return getUser();\n}\nexport function checkToken() {\n  return usersAPI.checkToken().then(dateString => new Date(dateString));\n}","map":{"version":3,"names":["usersAPI","signUp","userData","token","localStorage","setItem","getUser","getToken","getItem","payload","split","decodedPayload","atob","parsedPayload","JSON","parse","exp","Date","now","removeItem","user","logOut","login","credentials","checkToken","then","dateString"],"sources":["/Users/andrewsquier/sei/project/pasta-bar/src/utilities/users-service.js"],"sourcesContent":["import * as usersAPI from \"./users-api\"\n\nexport async function signUp(userData) {\n    const token = await usersAPI.signUp(userData)\n   \n    // return token\n    //instead of returning the token\n    localStorage.setItem(\"token\", token)\n    return getUser()\n}\n\nexport function getToken() {\n    //get token from localStorage\n    const token = localStorage.getItem(\"token\")\n    if(!token) return null\n    //get token's payload, use string.split\n\n    const payload = token.split(\".\")[1]\n    //JWT's are base64 encoded\n    //need to decode it to make it useable \n    //gives us a json user object\n    const decodedPayload = atob(payload)\n\n    const parsedPayload = JSON.parse(decodedPayload)\n    //JWT exp is expressed in seconds, not milliseconds, need to convert ( / 1000 below )\n\n    //check if expired\n    if(parsedPayload.exp < Date.now(0) / 1000) {\n        //the token has expired, remove it\n        localStorage.removeItem(\"token\")\n        return null\n    } else {\n        return token\n    }\n}\n\nexport function getUser() {\n    const token = getToken()\n\n    if(token){\n        const payload = token.split(\".\")[1]\n        const decodedPayload = atob(payload)\n        const parsedPayload = JSON.parse(decodedPayload)\n        return parsedPayload.user\n    } else {\n        return null\n    }\n\n}\n\nexport function logOut() {\n    localStorage.removeItem(\"token\")\n}\n\nexport async function login(credentials) {\n    //call login from users-api\n    //should be creating a token by loggin in \n    const token = await usersAPI.login(credentials)\n\n   //console.log(\"Token: \" + token)\n\n    //save the token, return the user\n    localStorage.setItem(\"token\", token)\n    return getUser()\n}\n\nexport function checkToken() {\n    return usersAPI.checkToken()\n        .then(dateString => new Date(dateString))\n}\n"],"mappings":"AAAA,OAAO,KAAKA,QAAQ,MAAM,aAAa;AAEvC,OAAO,eAAeC,MAAM,CAACC,QAAQ,EAAE;EACnC,MAAMC,KAAK,GAAG,MAAMH,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;;EAE7C;EACA;EACAE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACpC,OAAOG,OAAO,EAAE;AACpB;AAEA,OAAO,SAASC,QAAQ,GAAG;EACvB;EACA,MAAMJ,KAAK,GAAGC,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAG,CAACL,KAAK,EAAE,OAAO,IAAI;EACtB;;EAEA,MAAMM,OAAO,GAAGN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACnC;EACA;EACA;EACA,MAAMC,cAAc,GAAGC,IAAI,CAACH,OAAO,CAAC;EAEpC,MAAMI,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC;EAChD;;EAEA;EACA,IAAGE,aAAa,CAACG,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;IACvC;IACAd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;IAChC,OAAO,IAAI;EACf,CAAC,MAAM;IACH,OAAOhB,KAAK;EAChB;AACJ;AAEA,OAAO,SAASG,OAAO,GAAG;EACtB,MAAMH,KAAK,GAAGI,QAAQ,EAAE;EAExB,IAAGJ,KAAK,EAAC;IACL,MAAMM,OAAO,GAAGN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnC,MAAMC,cAAc,GAAGC,IAAI,CAACH,OAAO,CAAC;IACpC,MAAMI,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC;IAChD,OAAOE,aAAa,CAACO,IAAI;EAC7B,CAAC,MAAM;IACH,OAAO,IAAI;EACf;AAEJ;AAEA,OAAO,SAASC,MAAM,GAAG;EACrBjB,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;AACpC;AAEA,OAAO,eAAeG,KAAK,CAACC,WAAW,EAAE;EACrC;EACA;EACA,MAAMpB,KAAK,GAAG,MAAMH,QAAQ,CAACsB,KAAK,CAACC,WAAW,CAAC;;EAEhD;;EAEC;EACAnB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACpC,OAAOG,OAAO,EAAE;AACpB;AAEA,OAAO,SAASkB,UAAU,GAAG;EACzB,OAAOxB,QAAQ,CAACwB,UAAU,EAAE,CACvBC,IAAI,CAACC,UAAU,IAAI,IAAIT,IAAI,CAACS,UAAU,CAAC,CAAC;AACjD"},"metadata":{},"sourceType":"module","externalDependencies":[]}